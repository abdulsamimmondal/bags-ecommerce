version: 0.2

env:
  variables:
    ACCOUNT_ID: "713881797197"
    REGION: "us-east-1"
    REPO_NAME: "ecommerce-ecr"
    IMAGE_TAG: "latest"
    SONAR_PROJECT_KEY: "capstone_project"
    SONAR_HOST_URL: "http://3.87.231.29"
    SONAR_TOKEN: "sqp_08119884d3e5eef41d533c8cacb2d13c26b928eb"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Installing Node.js dependencies...
      - npm install
      - echo Installing SonarScanner CLI...
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      - unzip sonar-scanner.zip
      - mv sonar-scanner-* sonar-scanner
      - export PATH=$PATH:$(pwd)/sonar-scanner/bin

  pre_build:
    commands:
      - echo Adding SonarScanner to PATH...
      - export PATH=$PATH:$(pwd)/sonar-scanner/bin
      - echo Running SonarQube analysis...
      - >
        sonar-scanner
        -Dsonar.projectKey=$SONAR_PROJECT_KEY
        -Dsonar.sources=.
        -Dsonar.host.url=$SONAR_HOST_URL
        -Dsonar.login=$SONAR_TOKEN
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com

  build:
    commands:
      - echo Building Docker image...
      - docker build -t ${REPO_NAME}:${IMAGE_TAG} .
      - docker tag ${REPO_NAME}:${IMAGE_TAG} ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${IMAGE_TAG}

  post_build:
    commands:
      - set -e
      - echo Pushing Docker image to Amazon ECR...
      - docker push ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${IMAGE_TAG}
      - echo Creating final deployment files...
      - mkdir -p k8s-out
      - echo "--- Checking k8s directory structure ---"
      - ls -l k8s
      - sed "s|IMAGE_PLACEHOLDER|${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${REPO_NAME}:${IMAGE_TAG}|g" k8s/deployment.yaml > k8s-out/deployment.yaml
      - cp k8s/service.yaml k8s-out/service.yaml
      - cp k8s/mongodb-deployment.yaml k8s-out/mongodb-deployment.yaml
      - cp k8s/mongodb-service.yaml k8s-out/mongodb-service.yaml
      - echo "--- Contents of k8s-out ---"
      - ls -R k8s-out

artifacts:
  base-directory: k8s-out
  files:
    - deployment.yaml
    - service.yaml
    - mongodb-deployment.yaml
    - mongodb-service.yaml
